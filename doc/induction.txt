2010-08-21 14:34:53

http://github.com/emmapersky/one-click-orgs/issues#issue/118 "Update induction process to use interface closer to core app"
See "One Click Orgs v1.0 Requirements" on Google Docs for functional spec.

A new organisation is in a "pending" state until the founder marks it as "complete".
In this state:
- the founder can modify the organisation/consitution without making proposals
- the founder can add new founding members without making proposals
- there is a prominent message that highlights this, and a button to finalise
- founding members can log in and view the consitution, but cannot make changes

Once the founder marks the organisation as "complete":
- Changes now require a proposal
- Members have full access to the system

http://github.com/emmapersky/one-click-orgs/issues/#issue/58 "Multi-org templating: allow the one codebase to support multiple types of organisation"

tbd. 

(For now let's do a quick implementation of #118 and use this to highlight more
detailed requirements for #58.)


 =====================
 = Induction Process =
 =====================

Member class: "founder"
Founder has all possible perms
Founder has new perm: "make changes without proposal"
Founder has new perm: "create proposal to found org"

Member class: "founding member"
Founding member has only one, new perm: "vote on 'found org' proposal"

new banner: "pending org" message, and "found org now" button
-> Confirmation dialogue
- create 'found org' proposal
- migrate founder to 'founding member' class' to prevent org changes

when 'found org' proposal failed:
- founding members can log in, view the constitution, will see a 'founding vote failed' message

when 'found org' proposal succeeded:
- all founding members who voted 'yes' or who abstained (including the founder) get migrated to full 'member' status
- all other founding members receive an email 'sorry that you don't want to be a part of this'
  - do we need/want to disable these accounts?

 ========
 = code =
 ========

CURRENT STATE

DONE
* code cleanup of misc controller clause setters/getters
  * co.clauses.get_current||new, set, save!  -> co.clauses.set_text
* new proposal to found org
* new perm and before_filter: found_organisation_permission
* new state and before_filter: organisation_pending
* various controller/model/view changes for the above
* fixed misc typos
* 
* ...?

TODO
* reorganise induction process according to spec
* auto-select appropriate member classes during induction
  * "Founder" class at /induction/founder
  * "Founding Member" class at /induction/members
* remove dedicated timeline page and merge into dashboard (currently it just throws a NPE)
* direct edit for:
  * members -> add
  * dashboard -> add member
  * settings/constitution
* skip 'has user been inducted?' before_filter if org is pending
  * causes 'Error casting vote: Can not vote on proposals created before member inducted'
* set org state to 'failed' if not enough members voted for it


TO RESET ORG STATE AND START INDUCTION
$ rake db:setup
$ ./script/rails server

-> http://oco:3000/ and follow instructions

a@b.com, abc
http://abc.oco:3000/


SNIPPETS

# assign member classes, provided we already have members set up
Member.all
Member.all.each { |m| if m.id!=1 m.member_class = MemberClass.find_or_create_by_name('Founding Member'); m.save! }
Member.all.each { |m| if m.id=1 m.member_class = MemberClass.find_or_create_by_name('Founder'); m.save! }

# or just:
m = Member.find_by_id(1)
m.member_class = MemberClass.find_by_name('Founder'); m.save!

# set up org in pending state
o = Organisation.all.first
o.clauses.set_text('organisation_state', 'pending')

# when done with org setup:
o.clauses.set_text('organisation_state', 'proposed')

